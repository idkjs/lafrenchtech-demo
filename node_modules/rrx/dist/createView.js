'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _getMatch = require('./getMatch');

var _getMatch2 = _interopRequireDefault(_getMatch);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var createView = function createView(Component) {
  var RouteComponent = function (_React$Component) {
    _inherits(RouteComponent, _React$Component);

    function RouteComponent() {
      _classCallCheck(this, RouteComponent);

      return _possibleConstructorReturn(this, (RouteComponent.__proto__ || Object.getPrototypeOf(RouteComponent)).apply(this, arguments));
    }

    _createClass(RouteComponent, [{
      key: 'render',
      value: function render() {
        var _props = this.props,
            pattern = _props.pattern,
            props = _objectWithoutProperties(_props, ['pattern']);

        var _context = this.context,
            history = _context.history,
            location = _context.location;


        var match = (0, _getMatch2.default)(pattern, location);

        if (pattern && !match) return null;

        return _react2.default.createElement(Component, _extends({}, props, {
          history: history,
          location: location,
          params: match.params,
          search: match.search
        }));
      }
    }]);

    return RouteComponent;
  }(_react2.default.Component);

  RouteComponent.contextTypes = {
    history: _propTypes2.default.object,
    location: _propTypes2.default.object
  };

  return RouteComponent;
};

exports.default = createView;